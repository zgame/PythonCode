// To use the "libprotobuf-lite.lib" library for C++ code.
option optimize_for = LITE_RUNTIME;

import "CMD_GlobalServer.proto";

// Namespace: MESSAGE
package CMD_GLOBAL;

/*********** 世界BOSS活动相关 ************/

// 上传世界BOSS数据
message CMD_C_UP_WORLD_BOSS_HURT
{
	enum WorldBossName
	{
		WBN_SIREN = 0; //海妖-塞壬
		WBN_POSEIDON = 1; //海皇-波塞冬
	}
	optional uint64 cost = 1;	// 消耗金币
	optional uint64 drop = 2;	// 掉落金币
	optional uint64 addition = 3;	// 抬分金币
	optional uint32 boss_name = 4; //WorldBossName
	optional uint32 last_user = 5; //最后一个攻击BOSS的玩家UserID
	optional uint32 cannon_multi = 6; //玩家使用的炮倍
	optional bytes  killer_nick = 7; //玩家昵称
}

// 活动参与者信息
message WorldBossAttacker
{
	optional uint32 userId = 1;	// 用户ID
	optional uint64 attact = 2;	// 对boss的伤害
	optional bytes nick = 3;	// 昵称
	optional uint32 cannon = 4;	// 炮倍
	optional uint32 faceId = 5;	// 头像ID
	optional uint32 pay = 6;	// 充值金额
	optional uint32 dropGold = 7;	// 掉落金币 
	optional uint32 vipLev = 8;	// vip等级
	optional bool bActive = 9;	// 是否活跃（用于最终排行）
}

// 上传用户攻击
message CMD_C_UP_WORLD_BOSS_ATTACKER
{
	repeated WorldBossAttacker user_attact = 1;	// 用户攻击
	optional bool is_end_of_hurt = 2;	// 是否为攻击的结束包
	optional uint32 boss_name = 3; //WorldBossName
}

// 通知上传有效攻击用户(间隔500ms)
message CMD_S_UP_WORLD_BOSS_ACTIVE_ATTACKER
{
}

// 下发世界boss活动开放信息
message CMD_SS_WORLD_BOSS_ACTIVITY_INFO
{
	// 开放日志
	message OpenLog
	{
		optional uint32 open_time = 1;	// 开放时间
		optional uint64 Issue_reward = 2;	// 发放金额
	}
	repeated OpenLog open_log = 1;	// 开放日志
	repeated WorldBossUserRank rank = 2;	// 最近排名
}

// 当前世界boss活动信息
message CMD_SS_CUR_WORLD_BOSS_INFO
{
	optional uint32 activity_id = 1;	// 正在开放的活动ID
}

// 世界BOSS放技能
message CMD_SS_WORLD_BOSS_DO_SKILL
{
	optional uint32 boss_name = 1;  // CMD_C_UP_WORLD_BOSS_HURT::WorldBossName
	optional uint32 skill_id = 2;	// CMD_S_WORLD_BOSS_DO_SKILL::BossSkillID
}

message CMD_SS_CALL_FISH_MONSTER
{
	optional int32 num = 1; //新召唤出的鱼怪数量
}

message CMD_SS_STOP_PLAYER_TIME
{
	optional int64 start_time = 1; //技能开始时间
	optional int32 effect_time = 2; //影响时间
}

message CMD_SS_WEANKEN_PLAYER_TIME
{
	optional int64 start_time = 1; //技能开始时间
	optional int32 effect_time = 2; //影响时间
}

message CMD_SS_BOSS_SKILL_SHIELD_VALUE
{
	optional int64 value = 1; //技能提升的护盾值
}

//BOSS暴露弱点
message CMD_SS_EXPOSE_WEAKNESS
{
	repeated int32 weaknesses = 1; //弱点
}

/*********** 经典大奖池相关 ************/

// 推送更新
message CMD_SS_CLASSIC_PRIZE_POOL_UPDATE_CONTROL_INFO
{
	repeated uint32 guess_win_ratio = 1;	// 猜大小胜率
}

// 累积奖池金额
message CMD_C_ADD_CLASSIC_PRIZE_POOL
{
	optional int64 amount = 1;	// 金额
}

/*********** 聊天服相关 ************/

// 注册连接
message CMD_SC_REGISTER
{
	optional uint32 server_type = 1;		// 服务器类型
	optional string server_token = 2;		// 服务器令牌
}

// 注册连接
message CMD_SS_REGISTER
{
	optional ReplyResult result = 1;		// 注册结果
}

// 玩家信息
extend FriendUserInfo
{
	optional uint32 user_lv = 50;		// 角色等级
	optional uint32 gun_lv = 51;		// 炮等级
	optional uint32 online_time = 52;	// 在线时长
}

// 推送token
message CMD_SC_PUSH_TOKEN
{
	optional bytes token = 1;		// 令牌
	optional FriendUserInfo user_info = 2;		// 用户信息
}

// 更新玩家信息
message CMD_SC_UPDATE_USER_INFO
{
	optional FriendUserInfo info = 1;		// 用户信息
}

//推送玩家信息
message CMD_SC_TOKEN_USER_INFO
{
    enum UserInfoType
	{
		UIT_FACEID = 0;     //头像ID
		UIT_VIPLV = 1;      //VIP等级
	}
	optional uint32       userId = 1;   // 用户ID
	optional UserInfoType info = 2;		// 用户信息
	optional uint32       date = 3;     // 推送数据 
}


/*********** 梦幻展览相关 ************/
message FantasyLotteryInfo
{
    optional uint32 userId = 1;	                 // 用户ID
	repeated uint32 number = 2;                  // 中奖编号
	optional uint32 reward = 3;	                 // 中奖金额
	optional uint32 numId  = 4;                  // 编号ID
}

// 用户请求掉落展品
message CMD_C_FANTASY_DROP_LOTTERY
{
	optional uint32 userId = 1;	                 // 用户ID
	optional uint64 contribute = 2;	             // 充值贡献
	optional uint32 multiple = 3;                // 炮倍
	optional uint32 jointimes = 4;               // 今日参与次数
	optional uint32 ipaytotal = 5;               // 充值总额度
	optional uint32 viplev = 6;                  // 用户等级
	optional uint32 faceid = 7;                  // 用户头像
	optional bytes  nick = 8;                    // 用户呢称
	optional uint32 costpool = 9;                // 扣除的库存
}

// 梦幻展览展品列表
message CMD_S_FANTASY_LOTTERY_LIST
{
	repeated FantasyLotteryInfo info = 1;       //  展品信息
	optional uint32 infoType = 2;               //  同步类型0初始化1添加一条掉落
}

// 下发梦幻展览活动开放信息
message CMD_SS_FANTASY_LOTTERY_ACTIVITY_INFO
{
	repeated FantasyExhibitionUserRank rank = 1;  // 最近排名
}

/*********** 房间随机任务相关 ************/

// 房间任务鱼
message RoomTaskFish
{
	optional uint32 fish_id = 1;	// 鱼ID
	optional uint32 fish_num = 2;	// 鱼数量
}

// 房间任务
message RoomTask
{
	optional uint32 room_type = 1;	// 房间类型
	repeated RoomTaskFish fish = 2;	// 任务鱼
	optional uint64 id = 3;		// 任务ID
}

// 随机任务开启
message CMD_SS_ROOM_TASK_START
{
	optional uint32 count_dwon = 1;	// 倒计时
	repeated RoomTask task = 2;	// 任务
	optional bool is_start = 3;	// 是否启动任务
	optional uint32 today_count_max = 4;	// 今日最大完成次数
}

//虚弱状态结束
message CMD_SS_WEAK_STATUS_END
{

}

/*********** 中心服务器相关 ************/

// 房间在线信息
message RoomOnlineCount
{
	optional uint32 kind_id = 1;		// 类型标识
	optional uint32 server_id = 2;		// 服务器id
	optional uint32 android_count = 3;	// android在线人数
	optional uint32 ios_count = 4;		// ios在线人数
	optional uint32 h5_count = 5;		// h5在线人数
}

// 每组服务器在线信息
message CMD_L2C_OnlineInfo
{
	repeated RoomOnlineCount infos = 1;		// 不同设备类型的在线人数
}

// 请求登录
message CMD_C_RequestEnter
{
	optional uint32 user_id = 1;			// 用户id
	optional uint32 server_kind = 2;		// 服务器类型
	optional int64  server_id = 3;			// 服务器ID
	optional bytes  nick_name = 4;          // 用户呢称
	optional bytes  machine_id = 5;         // mac地址
	optional uint32 channel = 6;			// 渠道号
	optional uint32 socket = 7;				// 玩家连接服务器的socket
}

message CMD_S_RequestEnter
{
	optional uint32 user_id = 1;			// 用户id
	optional uint32	result = 2;				// 请求结果, 0-允许进入, 1-禁止进入
}

message CMD_C_UserEnter
{
	optional uint32  user_id = 1;			// 用户id
	optional uint32  game_id = 2;			// 游戏id
	optional bytes   nick_name = 3;         // 用户呢称
	optional uint32  gender = 4;			// 性别
	optional uint32  member_order = 5;		// 会员等级
	optional uint32  master_order = 6;		// 管理等级
	optional int64   server_id = 7;			// 服务器ID
	optional uint32  server_kind = 8;		// 服务器类型
	optional uint32  socket = 9;			// 玩家连接服务器的socket
}

message CMD_C_UserEnter_Fail
{
	optional uint32  user_id = 1;			// 用户id
	optional int64   server_id = 2;			// 服务器ID
	optional uint32  server_kind = 3;		// 服务器类型
	optional uint32  socket = 4;			// 玩家连接服务器的socket
}

message CMD_C_UserLeave
{
	optional uint32  user_id = 1;			// 用户id
	optional int64   server_id = 2;			// 服务器ID
	optional uint32  server_kind = 3;		// 服务器类型
	optional uint32  socket = 4;			// 玩家连接服务器的socket
}

message CMD_C_UserOffline
{
	optional uint32  user_id = 1;			// 用户id
	optional int64   server_id = 2;			// 服务器ID
	optional uint32  server_kind = 3;		// 服务器类型
	optional uint32  socket = 4;			// 玩家连接服务器的socket
	optional bool is_exit = 5;				// 是否是退出
}

message GlobalUserState
{
	optional uint32  user_id = 1;			// 用户id
	optional uint32  game_id = 2;			// 游戏id
	optional bytes   nick_name = 3;         // 用户呢称
	optional uint32  gender = 4;			// 性别
	optional uint32  member_order = 5;		// 会员等级
	optional uint32  master_order = 6;		// 管理等级
	optional bytes   machine_id = 7;        // mac地址
	optional uint32  channel = 8;			// 渠道号
	optional uint32  socket = 9;			// 玩家连接服务器的socket
}

// 向中心服同步游戏/登录服玩家状态,分批同步
message CMD_C_SYNC_USERSTATE
{
	optional uint32  first = 1;				// 是否第一个包
	optional uint32  end = 2;				// 是否是最后一个包
	optional int64   server_id = 3;			// 服务器ID
	optional uint32  server_kind = 4;		// 服务器类型
	repeated GlobalUserState users = 5;		// 玩家状态
}

message CMD_C_KICKUSER
{
	optional uint32  user_id = 1;			// 用户id
	optional uint32  socket = 2;			// 连接
}

message CMD_C_KICKUSER_RESP
{
	optional uint32  user_id = 1;			// 用户id
	optional int64   server_id = 2;			// 服务器ID
}

// 锁定/解锁指定连接（数据安全）
message CMD_SS_LOGIN_SERVER_LOCK
{
	enum Opt
	{
		LOCK = 0;	// 锁定
		UNLOCK = 1;	// 解锁
	}
	optional uint32  user_id = 1;			// 用户id
	optional uint32  socket = 2;			// 连接id
	optional Opt opt = 3;					// 锁/解锁登录服连接
}

// 通知玩家重定向连接
message CMD_SS_REDIRECT_CONNECT
{
	optional uint32 user_id = 1;				// 用户ID
	optional uint32 socket_id = 2;				// 连接ID
	optional uint32	server_id = 3;				// 游戏服务器真实ID
	repeated bytes addrs = 4;					// 服务器IP、域名（若自带端口，则不使用下面的端口字段）
	optional uint32 port = 5;					// 端口
};

message ServerInfo
{
	optional int32 type = 1;					// 服务器类型
	optional int64 server_id = 2;				// 服务器ID
	optional int32 kind_id = 3;					// 房间服务器游戏类型（gameserver专用）
	optional int32 cell_score = 4;				// 房间底分（gameserver专用）
	repeated bytes addrs = 5;					// 服务器IP、域名（若自带端口，则不使用下面的端口字段）
	optional uint32 port = 6;					// 端口
	repeated uint32 Version = 7;                // 支持版本
	optional bytes  data=8;                     // 扩展数据
}

// 服务器注册/注销
message CMD_SC_ONE_SERVER_INOUT
{
	optional bool is_in = 1;					// 是否注册
	optional ServerInfo server = 2;				// 服务器
}

// 同步服务器列表
message CMD_SC_SYNC_SERVER_LIST
{
	repeated ServerInfo servers = 1;			// 服务器
}

// 同步服务器列表
message CMD_SC_C_SYNC_USER_STATE
{
	optional uint32 user_id = 1;					// 玩家id
}

// 向中心服同步游戏/登录服玩家状态,单个
message CMD_SC_S_SYNC_USER_STATE
{
	optional int64   server_id = 1;			// 服务器ID
	optional uint32  server_kind = 2;		// 服务器类型
	optional GlobalUserState users = 3;		// 玩家状态
}

// 推送vip房间排行
message CMD_SS_GET_VIP_ROOM_RANK
{
	message UserRank
	{
		optional uint32 rank = 1;	// 排行
		optional uint32 user_id = 2;	// 用户ID
		optional bytes nick = 3;	// 昵称
		optional uint32 face_id = 4;	// 头像ID
		optional uint32 vip_lev = 5;	// vip等级
		optional uint32 integral = 6;	// 积分
	}

	repeated UserRank ranking_today = 1;	// 今日排行
	repeated UserRank ranking_yestoday = 2;	// 昨日排行
	enum Flag
	{
		Today = 1;
		Yestoday = 2;
		ALL = 3;
	}
	optional Flag flag = 3;	// 标记
}

// 排名奖励
message PBSubAwardRankingConfig
{
	optional int32 rank_top = 1;
	optional int32 rank_bottom = 2;
	repeated tagAwaedData awards = 3;	// 奖品列表
}
// 分榜配置
message PBSubAwardRankConfig
{
	optional int32 id = 1;				// 分榜ID
	optional int32 type = 2;			// 分榜类型
	optional int32 rank_name = 3;		// 分榜名字
	optional int32 reward_mail = 4;		// 奖励描述
	optional int32 rile = 5;			// 规则说明
	optional int32 prpompt_text = 6;	// 文字提示
	optional int64 score_astrict = 7 ;  //上榜限制
	optional int32 issue = 8;			// 期号
	repeated PBSubAwardRankingConfig ranks = 9;	// 排名奖励列表
}
// 排行榜配置
message PBAwardRankConfig
{ 
  optional int32 id = 1;				// 排行榜ID
  optional int32 rank_limit = 2;		// 我的排名检查上限
  optional int32 rank_num = 3;			// 上榜数量
  optional int32 open_time = 4;			// 开启时间
  optional int32 settle_time = 5; 		// 结算时间
  optional int32 roll_count = 6;		// 滚动信息条数
  optional bool is_open = 7;			// 是否开启
  optional bool is_no_start = 8;		// 未开启是否显示
  optional int32 rank_priority = 9;		// 排名优先级
  optional int32 open_lev = 10;			// 开启等级限制
  optional int32 Open_vip = 11;			// vip等级限制
  optional int32 gun_astrict = 12;		// 炮倍数限制
  optional int32 reminde_info = 13;		// 提示信息
  repeated PBSubAwardRankConfig sub_config = 14;	// 分榜列表
}

// 同步有奖排行配置
message CMD_SS_SYNC_AWARD_RANK_CONFIG
{
	repeated PBAwardRankConfig configs = 1;	// 配置列表
}

// 同步有奖排行滚动信息
message CMD_SS_SYNC_AWARD_RANK_ROLL
{
	repeated CMD_S_MostNewInfo rolls = 1;	// 滚动信息
}

// 推送有奖排行排行信息
message CMD_SS_PUSH_AWARD_RANK_RANKING
{
	optional int32 rank_id = 1; // 排行榜ID
	optional int32 type = 2;  // 子排行榜类型
	enum Flag
	{
		Current = 1;
		LAST = 2;
		ALL = 3;
	}
	optional Flag flag = 3;		// 标记
	repeated UserRankInfo new_rank = 4;		// 新排行
	repeated UserRankInfo old_rank = 5;		// 旧排行
	message Ranking
	{
		optional int32 rank = 1;	// 排名
		optional int32 user_id = 2;	// 用户ID
		optional int64 score = 3;	// 积分
	}
	repeated Ranking new_rankings = 6;	// 排名缓存
	repeated Ranking old_rankings = 7;	// 排名缓存
}

// 更新有奖排行子榜当前期号
message CMD_SS_UPDATE_AWARD_RANK_ISSUE
{
	optional int32 rank_id = 1; // 排行榜ID
	optional int32 type = 2;  // 子排行榜类型
	optional int32 issue = 3;	// 当前期号
}

/************************************************/

// 挑战赛奖励
message PBChallengeExtendAward
{
	optional int32 rank_top = 1;
	optional int32 rank_bottom = 2;
	optional tagAwaedData award = 3;	// 奖品
	optional uint32 last_integral = 4;	// 最后一名积分
}

// 挑战赛配置
message PBChallengeConfig
{
	optional uint32 id = 1;					//挑战ID
	optional uint32	open_time = 2;			//开放时间
	optional uint32	close_time = 3;			//关闭时间
	optional uint32 ticket_type = 4;		//报名费类型
	optional uint32 ticket_id = 5;			//报名费类型
	optional uint32 ticket_value = 6;		//报名费用
	optional uint32 bullet_num = 7;			//最大子弹数
	repeated PBChallengeExtendAward rewards = 8;	//排行奖励
	optional bool is_open = 9;				//是否开放
	optional uint32 max_play_count = 10;	//最大参加次数
}
// 同步挑战赛配置
message CMD_SS_SYNC_ARENA_CHALLENGE_CONFIG
{
	repeated PBChallengeConfig configs = 1;
}

// 推送挑战赛排行信息
message CMD_SS_PUSH_ARENA_CHALLENGE_RANK_RANKING
{
	optional int32 id = 1; // 排行榜ID
	enum Flag
	{
		Current = 1;
		LAST = 2;
		ALL = 3;
	}
	optional Flag flag = 2;		// 标记
	repeated UserRankInfo new_rank = 3;		// 新排行
	repeated UserRankInfo old_rank = 4;		// 旧排行
	message Ranking
	{
		optional int32 rank = 1;	// 排名
		optional int32 user_id = 2;	// 用户ID
		optional int64 score = 3;	// 积分
	}
	repeated Ranking cur_rankings = 5;		// 排名缓存
	repeated PBChallengeExtendAward new_extend_rewards = 6;	// 额外排行奖励
	repeated PBChallengeExtendAward old_extend_rewards = 7;	// 额外排行奖励
}
